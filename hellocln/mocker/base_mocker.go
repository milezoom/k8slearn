// Code generated by proto-gen-go-lib-contract . DO NOT EDIT.
// Source: "hellocln/contract"

package mocker

import (
	"context"
	"fmt"
	"hellocln/contract"
	"google.golang.org/grpc/metadata"
)

type Mocker struct {
	err      error
	response any
}

// * Call this method before running mock func for get error on response.
func (m *Mocker) SetResponseError(isError error) {
	m.err = isError
}

// * Call this method before running mock func for expected response.
func (m *Mocker) SetResponseValue(responseTarget any) {
	m.response = responseTarget
}

// Implements Lib
func (m *Mocker) PrintHello(ctx context.Context, md metadata.MD, input *contract.PrintHelloRequest) (resp *contract.PrintHelloResponse, err error) {
	if m.err != nil {
		err = m.err
		return
	}
	if m.response == nil {
		err = fmt.Errorf("do not know what to respond")
		return
	}
	resp, ok := m.response.(*contract.PrintHelloResponse)
	if !ok {
		err = fmt.Errorf("response data type is not *contract.PrintHelloResponse")

	}
	return
}
